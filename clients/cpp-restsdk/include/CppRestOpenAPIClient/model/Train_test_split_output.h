/**
 * rest-cpp-data-science
 * data science REST API endpoints, parameters, and responses, including information about preprocessing data, training models, making predictions, and evaluating models.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.3.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Train_test_split_output.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Train_test_split_output_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Train_test_split_output_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  Train_test_split_output
    : public ModelBase
{
public:
    Train_test_split_output();
    virtual ~Train_test_split_output();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Train_test_split_output members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::vector<double>>& getXTrain();
    bool xTrainIsSet() const;
    void unsetX_train();

    void setXTrain(const std::vector<std::vector<double>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::vector<double>>& getXTest();
    bool xTestIsSet() const;
    void unsetX_test();

    void setXTest(const std::vector<std::vector<double>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<double>& getYTrain();
    bool yTrainIsSet() const;
    void unsetY_train();

    void setYTrain(std::vector<double> value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<double>& getYTest();
    bool yTestIsSet() const;
    void unsetY_test();

    void setYTest(std::vector<double> value);


protected:
    std::vector<std::vector<double>> m_X_train;
    bool m_X_trainIsSet;
    std::vector<std::vector<double>> m_X_test;
    bool m_X_testIsSet;
    std::vector<double> m_Y_train;
    bool m_Y_trainIsSet;
    std::vector<double> m_Y_test;
    bool m_Y_testIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Train_test_split_output_H_ */
